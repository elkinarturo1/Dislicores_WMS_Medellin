@page "/administracion/usuarios"
@inject IJSRuntime JSRuntime

<h3>Usuarios</h3>

<div style="width:300px;float:left">
    <MatThemeProvider>
      <a href="/administracion/usuarioscrear"><MatButton Raised="true">Nuevo</MatButton></a>
    </MatThemeProvider>
</div>

<RadzenGrid AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" Data="@listadoResultados" TItem="UsuariosModel" ColumnWidth="100px"
            PageSize="38" AllowPaging="true" AllowSorting="true"
            Style="width:1080px">
    <Columns>

        <RadzenGridColumn TItem="UsuariosModel" Property="id" Title="id" Width="50px" />
        <RadzenGridColumn TItem="UsuariosModel" Property="codigo" Title="codigo" Width="150px" />
        <RadzenGridColumn TItem="UsuariosModel" Property="usuario" Title="usuario" Width="150px" />
        <RadzenGridColumn TItem="UsuariosModel" Property="clave" Title="clave" Width="150px" />

        <RadzenGridColumn TItem="UsuariosModel" Context="item" Bubble="false" Filterable="false" Sortable="false" TextAlign="TextAlign.Left" Width="150px">
            <Template Context="item">
                <a style="color:aqua" href="/Administracion/usuariosEditar/@item.id">
                    <RadzenButton Text="Edit" ButtonStyle="ButtonStyle.Primary" Style="padding:0px;width:50px" />
                </a>

                <a style="color:aqua" href="/Administracion/usuariosEliminar/@item.id/1">
                    <RadzenButton Text="Delete" ButtonStyle="ButtonStyle.Primary" Style="padding:0px;width:100px" />
                </a>
            </Template>
        </RadzenGridColumn>


    </Columns>
</RadzenGrid>

@code {

    RespuestaJson respuestaJson = new RespuestaJson();
    List<UsuariosModel> listadoResultados = new List<UsuariosModel>();
    UsuariosBL procesoBL = new UsuariosBL();

    protected override async Task OnInitializedAsync()
    {
        await consultarDatos();
    }

    public async Task consultarDatos()
    {

        try
        {

            respuestaJson = procesoBL.consultarUsuarios(-1,"-1", "-1");

            if (respuestaJson.bitError == false)
            {
                listadoResultados = (List<UsuariosModel>)respuestaJson.datos;
            }

        }
        catch (Exception ex)
        {
            respuestaJson.resultado = ex.Message;
        }

        StateHasChanged();
        if (respuestaJson.bitError == true)
        {
            await JSRuntime.MensajeProcesoError(respuestaJson.resultado);
        }

    }   

}
